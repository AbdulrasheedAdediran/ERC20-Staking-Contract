/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakingContract,
  StakingContractInterface,
} from "../StakingContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_batAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "stakedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeProfit",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "stakeMaturity",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001805573bc4ca0eda7647a8ab7c2061c2e118a18a936f13d600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100cc57600080fd5b5060405161088d38038061088d83398181016040528101906100ee9190610149565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101bb565b600081519050610143816101a4565b92915050565b60006020828403121561015b57600080fd5b600061016984828501610134565b91505092915050565b600061017d82610184565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101ad81610172565b81146101b857600080fd5b50565b6106c3806101ca6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063584b62a11461003b578063a694fc3a1461006e575b600080fd5b610055600480360381019061005091906102f7565b61008a565b6040516100659493929190610410565b60405180910390f35b61008860048036038101906100839190610333565b6100d4565b005b6004602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154908060030160009054906101000a900460ff16905084565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161013191906103d5565b60206040518083038186803b15801561014957600080fd5b505afa15801561015d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610181919061035c565b116101c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b8906103f0565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001548152602001908152602001600020905081816000018190555042816001018190555060b4426102369190610466565b8160010154141561025f5760018160030160006101000a81548160ff0219169083151502179055505b8060030160009054906101000a900460ff161561029c57600a6064826000015461028991906104bc565b61029391906104ed565b81600201819055505b600160008154809291906102af9061058f565b91905055505050565b6000813590506102c78161065f565b92915050565b6000813590506102dc81610676565b92915050565b6000815190506102f181610676565b92915050565b6000806040838503121561030a57600080fd5b6000610318858286016102b8565b9250506020610329858286016102cd565b9150509250929050565b60006020828403121561034557600080fd5b6000610353848285016102cd565b91505092915050565b60006020828403121561036e57600080fd5b600061037c848285016102e2565b91505092915050565b61038e81610547565b82525050565b61039d81610559565b82525050565b60006103b0601f83610455565b91506103bb82610636565b602082019050919050565b6103cf81610585565b82525050565b60006020820190506103ea6000830184610385565b92915050565b60006020820190508181036000830152610409816103a3565b9050919050565b600060808201905061042560008301876103c6565b61043260208301866103c6565b61043f60408301856103c6565b61044c6060830184610394565b95945050505050565b600082825260208201905092915050565b600061047182610585565b915061047c83610585565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104b1576104b06105d8565b5b828201905092915050565b60006104c782610585565b91506104d283610585565b9250826104e2576104e1610607565b5b828204905092915050565b60006104f882610585565b915061050383610585565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561053c5761053b6105d8565b5b828202905092915050565b600061055282610565565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061059a82610585565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156105cd576105cc6105d8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4d757374206f776e20426f72656420417065204e465420746f207374616b6500600082015250565b61066881610547565b811461067357600080fd5b50565b61067f81610585565b811461068a57600080fd5b5056fea2646970667358221220279c04b976c359e64354b15d12cfac221ebab6dc5c24463cfb7e6c5d5502ee6364736f6c63430008040033";

export class StakingContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _batAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingContract> {
    return super.deploy(
      _batAddress,
      overrides || {}
    ) as Promise<StakingContract>;
  }
  getDeployTransaction(
    _batAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_batAddress, overrides || {});
  }
  attach(address: string): StakingContract {
    return super.attach(address) as StakingContract;
  }
  connect(signer: Signer): StakingContract__factory {
    return super.connect(signer) as StakingContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingContractInterface {
    return new utils.Interface(_abi) as StakingContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingContract {
    return new Contract(address, _abi, signerOrProvider) as StakingContract;
  }
}
