/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakingContract,
  StakingContractInterface,
} from "../StakingContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maturityPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interestInPercent",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "stakeTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakedBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeProfit",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "stakeMaturity",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewStakeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "viewStakes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "_stakes",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class StakingContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _maturityPeriod: BigNumberish,
    _interestInPercent: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingContract> {
    return super.deploy(
      _maturityPeriod,
      _interestInPercent,
      overrides || {}
    ) as Promise<StakingContract>;
  }
  getDeployTransaction(
    _maturityPeriod: BigNumberish,
    _interestInPercent: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _maturityPeriod,
      _interestInPercent,
      overrides || {}
    );
  }
  attach(address: string): StakingContract {
    return super.attach(address) as StakingContract;
  }
  connect(signer: Signer): StakingContract__factory {
    return super.connect(signer) as StakingContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingContractInterface {
    return new utils.Interface(_abi) as StakingContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingContract {
    return new Contract(address, _abi, signerOrProvider) as StakingContract;
  }
}
